import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import numpy as np
data = pd.read_csv("CustomerChurn.csv")
data.drop(["Count", "Country", "State", "Lat Long", "Churn Score"], axis = 1, inplace = True)
data[["Zip Code", "Churn Value"]] = data[["Zip Code", "Churn Value"]].astype(str)
data[["Total Charges"]] = data[["Total Charges"]].replace(' ','-1000', regex=True)
data[["Total Charges"]] = data[["Total Charges"]].astype(float)
data[["Total Charges"]] = data[["Total Charges"]].replace(-1000,np.nan, regex=True)
#data.info()
#data.nunique()
View(data)
data.describe()
data.info()
data = pd.read_csv("CustomerChurn.csv")
# drop irrelevant features
data.drop(["Count", "Country", "State", "Lat Long", "Churn Score"], axis = 1, inplace = True)
# correct data types
data[["Zip Code", "Churn Value"]] = data[["Zip Code", "Churn Value"]].astype(str)
data[["Total Charges"]] = data[["Total Charges"]].replace(' ','-1000', regex=True)
data[["Total Charges"]] = data[["Total Charges"]].astype(float)
data[["Total Charges"]] = data[["Total Charges"]].replace(-1000,np.nan, regex=True)
#data.info()
#data.nunique()
#data.info()
#data.info()
View(data)
data.nunique()
data.groupby("Churn Label").count().iloc[:,0]
data.groupby("Churn Label").count()
data.groupby("Churn Label").count().iloc[:,0]
data.groupby("Churn Label", "gender").count().iloc[:,0]
plt.bar("gender", "Churn Label")
plt.show()
plt.bar(data[,"gender"], data[,"Churn Label"])
plt.bar(x="gender", y="Churn Label", data= data)
plt.bar(data["gender"], data["Churn Label"])
plt.bar(data["Gender"], data["Churn Label"])
plt.show()
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import numpy as np
import seaborn as sns
pip install seaborn
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import numpy as np
import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import numpy as np
import seaborn as sns
sns.relplot(x="gender", y="CLTV", data = data)
sns.relplot(x="Gender", y="CLTV", data = data)
sns.displot(x="CLTV", data = datal, KDE = T)
sns.displot(x="CLTV", data = data, kde = T)
sns.displot(x="CLTV", data = data, kde = True)
sns.displot(x="CLTV", data = data, kde = True, col = "time")
plt.show()
?sns.set_theme()
sns.set_theme()
sns.displot(x="CLTV", data = data, kde = True)
plt.show()
sns.catplot(x="Gender", y="CLTV", data = data, kind= "swarm")
plt.show()
![](map.png)
![](map.png)
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE, comment = NA)
library(reticulate)
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE, comment = NA, fig.pos = "H")
library(reticulate)
reticulate::repl_python()
